<?php
/*
 *
 *
 * @copyright Copyright (c) 2014-2014 KipsProduction (http://www.kips.gr.jp)
 * @license   http://www.kips.gr.jp/newbsd/LICENSE.txt New BSD License
 */

namespace NpPageTest\Config\Loader;

use Flower\Test\TestTool;
use NpPage\Config\Loader\File;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-18 at 22:23:34.
 */
class FileTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var File
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new File;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpPage\Config\Loader\File::setResolver
     */
    public function testSetResolver()
    {
        $resolver = $this->getMock('NpPage\Config\ConfigResolverInterface');
        $this->object->setResolver($resolver);
        $this->assertSame($resolver, TestTool::getPropertyValue($this->object, 'resolver'));
    }

    /**
     * @covers NpPage\Config\Loader\File::getResolver
     */
    public function testGetResolver()
    {
        $resolver = $this->getMock('NpPage\Config\ConfigResolverInterface');
        $this->object->setResolver($resolver);
        $this->assertSame($resolver, $this->object->getResolver());
    }

    /**
     * @covers NpPage\Config\Loader\File::hasResolver
     */
    public function testHasResolver()
    {
        $resolver = $this->getMock('NpPage\Config\ConfigResolverInterface');
        $this->object->setResolver($resolver);
        $this->assertTrue($this->object->hasResolver());
    }

    /**
     * @covers NpPage\Config\Loader\File::load
     */
    public function testLoad()
    {
        $name = 'foo';
        $path = __DIR__ . DIRECTORY_SEPARATOR . 'TestAsset' . DIRECTORY_SEPARATOR . 'config.php';
        $resolver = $this->getMock('NpPage\Config\ConfigResolverInterface');
        $resolver->expects($this->once())
                ->method('resolve')
                ->with($this->equalTo($name))
                ->will($this->returnValue($path));
        $this->object->setResolver($resolver);
        $res = $this->object->load($name);
        $this->assertEquals(array('a' => 'A'), $res);
    }
}
