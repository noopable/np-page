<?php
/*
 *
 *
 * @copyright Copyright (c) 2014-2014 KipsProduction (http://www.kips.gr.jp)
 * @license   http://www.kips.gr.jp/newbsd/LICENSE.txt New BSD License
 */

namespace NpPageTest\Service;

use NpPage\Service;
use NpPage\Service\BlockPluginManagerFactory;
use Zend\ServiceManager\ServiceManager;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-15 at 14:23:53.
 */
class BlockPluginManagerFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var BlockPluginManagerFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new BlockPluginManagerFactory;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpPage\Service\BlockPluginManagerFactory::getConfigId
     */
    public function testGetConfigId()
    {
        $this->assertEquals('np-page', $this->object->getConfigId());
    }

    /**
     * @covers NpPage\Service\BlockPluginManagerFactory::createService
     */
    public function testCreateService()
    {
        $serviceLocator = new ServiceManager;
        $config = array(
            'np-page' => array(
                'service_name' => 'Foo',
                'block_plugin' => array(),
            ),
        );

        $service = $this->getMock('NpPage\\ServiceInterface');
        $serviceLocator->setService('Foo', $service);
        $serviceLocator->setService('Config', $config);

        $blocks = $this->object->createService($serviceLocator);
        $this->assertInstanceOf('NpPage\\BlockPluginManager', $blocks);
        $this->assertTrue($blocks->issetBlockInitializer());
    }
}
