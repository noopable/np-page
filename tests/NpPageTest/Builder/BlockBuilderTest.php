<?php
/**
 *
 * @copyright Copyright (c) 2013-2014 KipsProduction (http://www.kips.gr.jp)
 * @license   http://www.kips.gr.jp/newbsd/LICENSE.txt New BSD License
 */

namespace NpPageTest\Builder;

use Flower\Test\TestTool;
use NpPage\Block\Block;
use NpPage\Builder\BlockBuilder;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-16 at 16:12:37.
 */
class BlockBuilderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var BlockBuilder
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new BlockBuilder;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpPage\Builder\BlockBuilder::build
     */
    public function testBuild()
    {
        $block = new Block;
        $block->setOption('builder', array('foo'));
        $this->object->build($block);
        $this->assertEquals(array('foo'), TestTool::getPropertyValue($this->object, 'buildOptions'));

        //callbackで、builderを取得してblockを操作できる
        $block = new Block;
        $block->setOption('builder', function ($builder) {
            $b = $builder->thisBlock();
            $b->setProperty('debug', $builder);
            return $b;
        });
        $this->object->build($block);
        $this->assertSame($this->object, $block->getProperty('debug'));
        $this->assertSame($block, TestTool::getPropertyValue($this->object, 'block'));
    }

    /**
     * @covers NpPage\Builder\BlockBuilder::prepareViewModel
     */
    public function testPrepareViewModel()
    {
        $block = new Block;
        $viewModel = $block->getViewModel();

        //初期値
        $this->assertFalse($viewModel->isAppend());

        $options = array(
            'captureTo' => 'foo',
            'template' => 'bar',
            'viewModelAppend' => true,
        );
        $block->setOptions($options);
        $this->object->prepareViewModel($block);

        $this->assertEquals('foo', $viewModel->captureTo());
        $this->assertEquals('bar', $viewModel->getTemplate());
        $this->assertTrue($viewModel->isAppend());
    }

    /**
     * @covers NpPage\Builder\BlockBuilder::getBuildOptions
     */
    public function testGetBuildOptions()
    {
        $block = new Block;
        $block->setOption('builder', array('foo'));
        $this->object->build($block);
        $this->assertEquals(array('foo'), $this->object->getBuildOptions());
    }

    /**
     * @covers NpPage\Builder\BlockBuilder::thisBlock
     */
    public function testThisBlock()
    {
        $block = new Block;
        $this->object->build($block);
        $this->assertSame($block, $this->object->thisBlock());
    }
}
