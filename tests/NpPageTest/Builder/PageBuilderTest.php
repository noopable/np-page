<?php
/**
 *
 * @copyright Copyright (c) 2013-2014 KipsProduction (http://www.kips.gr.jp)
 * @license   http://www.kips.gr.jp/newbsd/LICENSE.txt New BSD License
 */

namespace NpPageTest\Builder;

use NpPage\Block\Page;
use NpPage\Builder\PageBuilder;
use NpPage\Service;
use Zend\Mvc\MvcEvent;
use Zend\ServiceManager\ServiceManager;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-16 at 16:12:50.
 */
class PageBuilderTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var PageBuilder
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new PageBuilder;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers NpPage\Builder\PageBuilder::prepareViewModel
     * @todo   Implement testPrepareViewModel().
     */
    public function testPrepareViewModel()
    {
        $page = new Page;
        $sl = new ServiceManager;
        $event = new MvcEvent;
        $viewManager = $this->getMock('Zend\\Mvc\\View\\Http\\ViewManager');
        $viewManager->expects($this->once())
                ->method('getLayoutTemplate')
                ->will($this->returnValue('foo'));
        $application = $this->getMockBuilder('Zend\\Mvc\\Application')
                ->disableOriginalConstructor()->getMock();
        $application->expects($this->once())
                ->method('getMvcEvent')
                ->will($this->returnValue($event));
        $sl->setService('view_manager', $viewManager);
        $sl->setService('application', $application);
        $this->object->setServiceLocator($sl);

        $this->object->prepareViewModel($page);

        $this->assertTrue($page->getViewModel()->terminate());
        $this->assertEquals('foo', $page->getViewModel()->getTemplate());
    }
}
